name: GradleTest and SAM Deploy

permissions:
  id-token: write
  contents: read

on:
  pull_request:
  push:
    branches:
      - ODWA-31-AWS-DEPLOY

jobs:
  gradle-test:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/ODWA-31-AWS-DEPLOY'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Gradle tests and build
        run: ./gradlew build test

  test-and-deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/ODWA-31-AWS-DEPLOY'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: ap-northeast-2

      - name: SAM build
        run: sam build

      - name: SAM deploy
        run: sam deploy